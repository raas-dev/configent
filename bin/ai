#!/bin/sh

# configent (https://github.com/raas-dev/configent)
# One command automated macOS/Linux laptop/VM/container bootstrapper.
#
# Copyright(C) 2016- Anssi Syrj√§salo (http://a.syrjasalo.com)
# Licensed under GNU Lesser General Public License v3 (LGPL-3.0).

# OpenAI completions API shell client in <80 lines, requires jq/gojq and curl

### constants ##################################################################

hist_file="$HOME/.ai_history"

red=$(tput setaf 1)
green=$(tput setaf 2)
normal=$(tput sgr0)

### variables ##################################################################

[ -z "$AI_MODEL" ] && AI_MODEL="text-davinci-003"
[ -z "$AI_MAX_TOKENS" ] && AI_MAX_TOKENS=512
[ -z "$AI_TEMPERATURE" ] && AI_TEMPERATURE=0.4

################################################################################

if ! command -v curl >/dev/null; then
  printf '%sError: curl not found in this system.\n' "$red"
  exit 127
fi

if command -v gojq >/dev/null; then
  json_parser="gojq"
elif command -v jq >/dev/null; then
  json_parser="jq"
else
  printf '%sError: gojq/jq not found in this system.\n' "$red"
  exit 127
fi

if [ -z "$OPENAI_API_KEY" ]; then
  printf '%sError: export OPENAI_API_KEY=your-openaikey\n' "$red"
  exit 1
fi

[ ! -f "$hist_file" ] && touch "$hist_file"

while true; do
  if [ $# -gt 1 ]; then
    prompt="$*"
  else
    printf '\n%s?: ' "$green"
    read -r prompt
    printf '%s' "$normal"
  fi

  if [ "$prompt" = "exit" ] || [ "$prompt" = "quit" ]; then
    exit 0
  elif [ "$prompt" = "history" ]; then
    printf '%s\n' "$(cat "$hist_file")"
  else
    escaped_prompt=$(echo "$prompt" | sed 's/"/\\"/g')
    # shellcheck disable=SC2086  # not quoting AI_MAX_TOKENS and AI_TEMPERATURE
    response=$(curl https://api.openai.com/v1/completions -sS \
      -H 'Content-Type: application/json' \
      -H "Authorization: Bearer $OPENAI_API_KEY" \
      -d '{
  			"model": "'"$AI_MODEL"'",
  			"prompt": "'"$escaped_prompt"'",
  			"max_tokens": '$AI_MAX_TOKENS',
  			"temperature": '$AI_TEMPERATURE'
	    }' | "$json_parser" --raw-output '.choices[].text' | sed '1,2d')
    printf '%s\n' "$response"
    timestamp=$(date +"%d.%m.%Y %H:%M:%S")
    printf '\n%s\n?: %s\n%s\n' "$timestamp" "$prompt" "$response" >>"$hist_file"
  fi

  [ $# -gt 1 ] && exit 0
done
