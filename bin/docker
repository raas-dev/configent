#!/bin/sh

# configent (https://github.com/raas-dev/configent)
# One command automated macOS/Linux laptop/VM/container bootstrapper.
#
# Copyright(C) 2016- Anssi SyrjÃ¤salo (http://a.syrjasalo.com)
# Licensed under GNU Lesser General Public License v3 (LGPL-3.0).

# shim for running `docker` in lima VM

# shellcheck disable=SC2068  # not quoting parameters passed to the real bin

: "${VM:="ubuntu"}"

install_docker_buildx_plugin() {
  if [ ! -x "$DOCKER_CLI_PLUGINS_DIR/docker-buildx" ]; then
    buildx_version="v0.11.1"
    os="$(uname | tr '[:upper:]' '[:lower:]')"
    arch="$(uname -m)"
    if [ "$arch" = "aarch64" ]; then
      arch="arm64"
    fi
    echo "Downloading Docker Buildx as Docker CLI plugin on $os ($arch)"
    rm -f "$DOCKER_CLI_PLUGINS_DIR/docker-buildx"
    mkdir -p "$DOCKER_CLI_PLUGINS_DIR"
    curl -fsSL "https://github.com/docker/buildx/releases/download/$buildx_version/buildx-$buildx_version.$os-$arch" \
      -o "$DOCKER_CLI_PLUGINS_DIR/docker-buildx"
    if [ "$(id -u)" = 0 ]; then
      chmod a+rx "$DOCKER_CLI_PLUGINS_DIR/docker-buildx"
    else
      chmod +x "$DOCKER_CLI_PLUGINS_DIR/docker-buildx"
    fi
  fi
}

install_docker_compose_plugin() {
  if [ ! -x "$DOCKER_CLI_PLUGINS_DIR/docker-compose" ]; then
    os="$(uname)"
    arch="$(uname -m)"
    echo "Downloading Docker Compose as Docker CLI plugin on $os ($arch)"
    rm -f "$DOCKER_CLI_PLUGINS_DIR/docker-compose"
    mkdir -p "$DOCKER_CLI_PLUGINS_DIR"
    curl -fsSL "https://github.com/docker/compose/releases/latest/download/docker-compose-$os-$arch" \
      -o "$DOCKER_CLI_PLUGINS_DIR/docker-compose"
    if [ "$(id -u)" = 0 ]; then
      chmod a+rx "$DOCKER_CLI_PLUGINS_DIR/docker-compose"
    else
      chmod +x "$DOCKER_CLI_PLUGINS_DIR/docker-compose"
    fi
  fi
}

if [ "$(uname -s)" = 'Darwin' ]; then
  if ! command -v limactl >/dev/null; then
    echo "Error: limactl not found on macOS, cannot start Linux VM for docker."
    exit 127
  fi
  if ! limactl shell "$VM" true >/dev/null 2>&1; then
    limactl start "$HOME/local/etc/lima/$VM.yaml" --tty=false ||
      limactl start "$VM"
  fi
  # pass arguments to this exact same script on the guest VM
  limactl shell "$VM" "$HOME/local/bin/docker" $@
else
  # shellcheck disable=SC2155  # will not declare separately
  [ -z "$XDG_RUNTIME_DIR" ] && export XDG_RUNTIME_DIR="/run/user/$(id -u)"
  if [ -z "$DOCKER_HOST" ]; then
    if [ -S "$XDG_RUNTIME_DIR/docker.sock" ]; then
      export DOCKER_HOST="unix://$XDG_RUNTIME_DIR/docker.sock" # rootless
    elif [ -S "/var/run/docker.sock" ]; then
      export DOCKER_HOST="unix:///var/run/docker.sock" # rootful
    fi
  fi
  if [ -x "$HOME/bin/docker" ]; then
    # user scope
    DOCKER_CLI_PLUGINS_DIR="$HOME/.docker/cli-plugins"
    if [ "$1" = "build" ]; then
      install_docker_buildx_plugin
    elif [ "$1" = "compose" ]; then
      install_docker_compose_plugin
    fi
    "$HOME/bin/docker" $@
  elif [ -x "/usr/bin/docker" ]; then
    # system scope
    DOCKER_CLI_PLUGINS_DIR="/usr/libexec/docker/cli-plugins"
    if [ "$1" = "build" ]; then
      install_docker_buildx_plugin
    elif [ "$1" = "compose" ]; then
      install_docker_compose_plugin
    fi
    "/usr/bin/docker" $@
  else
    echo "Error: Docker CLI not found or executable in this Linux system."
    exit 127
  fi
fi
