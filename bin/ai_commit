#!/bin/sh

# configent (https://github.com/raas-dev/configent)
# One command automated macOS/Linux laptop/VM/container bootstrapper.
#
# Copyright(C) 2016- Anssi SyrjÃ¤salo (http://a.syrjasalo.com)
# Licensed under GNU Lesser General Public License v3 (LGPL-3.0).

# Proposes git commit message generated with LLM and asks to commit

# shellcheck disable=SC2034  # some colors are unused
normal=$(tput sgr0)
bold=$(tput bold)
black=$(tput setaf 0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)

if ! command -v lumen >/dev/null; then
  printf "%sError: lumen not found in the system.\n" "$red"
  exit 127
fi

git_diff="$(git diff --staged --no-color)"
if [ -z "$git_diff" ]; then
  printf "%sNothing staged to commit.\n" "$red"
  exit 1
fi

additional_context="You must use conventional commits message and follow these
additional rules.

Type:

- You must prefer 'fix' over 'feat' as type unless the commit adds new files.
- You must prefer 'chore' over 'fix' if only package versions are changed.
- You must prefer 'chore' over 'docs' if change is to yaml or json files.

Scope:

You must use a single word for the scope. The scope can be the file name or the
directory name (only if multiple files in that directory are changed),
UNLESS that is too ambiguous such as 'config'. If this is the case, go back in
the current working directory path until you can find an unambiguous name to
use as the scope.

- You must NOT start the scope name with a dot.
- You must NOT use special characters in the scope.
- You must NOT use emojis in the scope.
"

if [ -n "$*" ]; then
  commit_message="$(lumen draft --context "$additional_context.

    User provided hints for type and scope:
    $*
  ")"
else
  commit_message="$(lumen draft --context "$additional_context")"
fi

printf "%s$commit_message" "$white"
printf "\n"

if [ -z "$NONINTERACTIVE" ]; then
  printf "\n%sCommit with this (y), edit message first (e), or quit (q)\
  [y\\\e\\\q] %s> " "${bold}${cyan}" "$normal"
  read -r choice
else
  choice="y"
fi

case "$choice" in
[yY])
  git commit --message "$commit_message"
  ;;
[eE])
  git commit --edit --message "$commit_message"
  ;;
*)
  printf "Aborted.\n"
  exit 1
  ;;
esac
