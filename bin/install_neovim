#!/bin/sh

# configent (https://github.com/raas-dev/configent)
# One command automated macOS/Linux laptop/VM/container bootstrapper.
#
# Copyright(C) 2016- Anssi SyrjÃ¤salo (http://a.syrjasalo.com)
# Licensed under GNU Lesser General Public License v3 (LGPL-3.0).

trap "printf '\nCaught ^C from user - exiting now\n' ; exit 130" INT

this_path=$(cd "$(dirname "$0")" && pwd)
backup_path="$this_path/../.backup"

### Neovim from Homebrew #######################################################

eval_brew() {
  if [ -x "/opt/homebrew/bin/brew" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
  elif [ -x "/usr/local/bin/brew" ]; then
    eval "$(/usr/local/bin/brew shellenv)"
  elif [ -x "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
  elif [ -x "$HOME/.linuxbrew/bin/brew" ]; then
    eval "$("$HOME"/.linuxbrew/bin/brew shellenv)"
  fi
}
eval_brew

if ! command -v brew >/dev/null; then
  NONINTERACTIVE=true HOMEBREW_INSTALL_FROM_API=true \
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  eval_brew
fi

if command -v brew >/dev/null; then
  brew install neovim
fi

### Symlink Neovim configs #####################################################

# Vim  (.vimrc is backed up by symlink_dotfiles)
if [ ! -d "$backup_path/.vim" ] && [ -d "$HOME/.vim" ]; then
  mkdir -p "$backup_path"
  cp -RP "$HOME/.vim" "$backup_path/.vim"
fi

# Neovim
if [ ! -d "$backup_path/.config/nvim" ] && [ -d "$HOME/.config/nvim" ]; then
  mkdir -p "$backup_path/.config"
  cp -RP "$HOME/.config/nvim" "$backup_path/.config/nvim"
fi

mkdir -p "$HOME/.config/nvim"
ln -sfnv "$HOME/.vim" "$HOME/.config/nvim"
ln -sfnv "$HOME/.vimrc" "$HOME/.config/nvim/init.vim"

### Install Vundle #############################################################

vundle_dir="$HOME/.vim/bundle/Vundle.vim"
git clone https://github.com/VundleVim/Vundle.vim.git "$vundle_dir" ||
  git -C "$vundle_dir" pull --no-autostash --rebase

printf '\n' | vim +PluginInstall +qall 2>/dev/null
