#!/bin/sh

# configent (https://github.com/raas-dev/configent)
# One command automated macOS/Linux laptop/VM/container bootstrapper.
#
# Copyright(C) 2016- Anssi SyrjÃ¤salo (http://a.syrjasalo.com)
# Licensed under GNU Lesser General Public License v3 (LGPL-3.0).

# shim for running `podman` in lima VM

# on macOS, --rosetta is not passed to limactl start as of 2025-06 due to bug
# see: https://github.com/lima-vm/lima/issues/3592

: "${NAME:="podman"}"
: "${TEMPLATE:="fedora"}"

install_docker_compose_plugin() {
  if [ ! -x "$HOME/.docker/cli-plugins/docker-compose" ]; then
    os="$(uname | tr '[:upper:]' '[:lower:]')"
    arch="$(uname -m)"
    if [ "$os" = "darwin" ] && [ "$arch" = "arm64" ]; then
      arch="aarch64"
    fi
    echo "Downloading Docker Compose as Docker CLI plugin on $os ($arch)"
    mkdir -p "$HOME/.docker/cli-plugins"
    rm -f "$HOME/.docker/cli-plugins/docker-compose"
    curl --create-dirs -fsSL "https://github.com/docker/compose/releases/latest/download/docker-compose-$os-$arch" \
      -o "$HOME/.docker/cli-plugins/docker-compose"
    chmod +x "$HOME/.docker/cli-plugins/docker-compose"
  fi
}

if [ "$(uname -s)" = 'Darwin' ]; then
  # in all cases, guest VM is required to run Podman daemon
  if ! command -v limactl >/dev/null; then
    echo "Error: limactl not found on macOS, cannot start Linux VM for podman."
    exit 127
  fi
  # start VM if not running
  if ! limactl list --json | grep -q "\"$NAME\".*\"status\": *\"Running\""; then
    if [ -x "/opt/socket_vmnet/bin/socket_vmnet" ]; then
      limactl start --name "$NAME" "$HOME/.config/configent/lima/$TEMPLATE.yaml" --tty=false --vm-type=vz --network=lima:bridged --set=".env.GITHUB_TOKEN = \"$GITHUB_TOKEN\"" ||
        limactl start --name "$NAME" --network=lima:bridged --set=".env.GITHUB_TOKEN = \"$GITHUB_TOKEN\""
    else
      limactl start --name "$NAME" "$HOME/.config/configent/lima/$TEMPLATE.yaml" --tty=false --vm-type=vz --network=vzNAT --set=".env.GITHUB_TOKEN = \"$GITHUB_TOKEN\"" ||
        limactl start --name "$NAME" --network=vzNAT --set=".env.GITHUB_TOKEN = \"$GITHUB_TOKEN\""
    fi
  fi
  # macOS priority: mise, homebrew
  if [ -x "$HOME/.local/share/mise/shims/podman" ]; then
    podman_bin_path="$HOME/.local/share/mise/shims/podman"
  elif [ -x "/opt/homebrew/bin/podman" ]; then
    podman_bin_path="/opt/homebrew/bin/podman"
  elif [ -x "/usr/local/bin/podman" ]; then
    podman_bin_path="/usr/local/bin/podman"
  fi
  if [ -n "$podman_bin_path" ]; then
    if [ "$1" = "compose" ]; then
      install_docker_compose_plugin
      export PODMAN_COMPOSE_WARNING_LOGS=false
    fi
    "$podman_bin_path" "$@"
  else
    # no podman CLI found on macOS -> call this script on the Linux guest VM
    limactl shell "$NAME" ~/configent/bin/podman "$@"
  fi
else
  # shellcheck disable=SC2155  # will not declare separately
  if [ -x "$HOME/.local/share/mise/shims/podman" ]; then
    # user-wide podman installation (mise registry)
    if [ "$1" = "compose" ]; then
      install_docker_compose_plugin
      export PODMAN_COMPOSE_WARNING_LOGS=false
    fi
    "$HOME/.local/share/mise/shims/podman" "$@"
  elif [ -x "/usr/bin/podman" ]; then
    # system-wide podman installation (via DEB/RPM packages)
    if [ "$1" = "compose" ]; then
      install_docker_compose_plugin
      export PODMAN_COMPOSE_WARNING_LOGS=false
    fi
    "/usr/bin/podman" "$@"
  else
    echo "Error: podman not found in this Linux system."
    exit 127
  fi
fi
