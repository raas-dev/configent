### User info ##################################################################

# user.name and user.email are set in ~/.rclocal as environment variables

### Aliases ####################################################################

[alias]
  a = add --patch
  b = branch --list --all -vv
  bd = branch --delete --force
  bda = !"git branch --merged | grep -v '\\*' | xargs -n 1 git branch --delete"
  bm = branch --move --force
  c = !"f() { ai_commit \"$*\"; }; f"
  ca = !"git add --all && git c"
  cam = !"git add --all && git commit --amend"
  co = checkout
  discard = reset --hard
  f = fetch --all --tags
  i = pull --rebase --recurse-submodules
  ig = ls-files --others --ignored --exclude-standard --directory
  in = !"git remote update --prune; git log ..@{u}"
  l = log --graph --pretty=format:'%C(yellow)%h %C(green)%d%C(reset) %s %C(blue)(%cr) %C(cyan)<%an>' --abbrev-commit --date=relative
  o = !"git push --set-upstream && git push --tags"
  out = log @{u}..
  purge = clean -d --force
  r = remote --verbose
  re = diff --name-only --diff-filter=U
  rea = rebase --abort
  rec = !"git add --all && git rebase --continue"
  rem = reset --mixed
  rip = rebase --interactive @{upstream}
  s = status --short
  st = status --branch --show-stash
  sup = submodule update --init --recursive
  t = tag --list --sort=-version:refname
  undo = reset --soft HEAD~1

  # Show the diff between the latest commit and current
  d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"

  # Show the diff between the $number revisions ago and current
  di = !"f() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; f"

  # Find branches containing commit
  fb = !"f() { git branch --all --contains $1; }; f"

  # Find commits by commit message
  fc = !"f() { git log --pretty=format:'%C(yellow)%h  %C(blue)%ad %C(green)%d%C(reset) %s %C(cyan)<%an>' --date=short --grep=$1 --regexp-ignore-case; }; f"

  # Find commits by source code
  fs = !"f() { git log --pretty=format:'%C(yellow)%h  %C(blue)%ad %C(green)%d%C(reset) %s %C(cyan)<%an>' --date=short -S$1 --regexp-ignore-case; }; f"

  # Find tags containing commit
  ft = !"f() { git tag --contains $1; }; f"

  # Remove a tag (local and remote) and recreate it for HEAD
  retag = !"f() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; f"

  # Switch to a remote tracking branch, create branch if it does not exist
  sw = !"f() { git fetch origin && git switch --create $1 --track origin/$1 || git switch $1 || git switch --create $1; }; f"

  # Commit all changes with auto-generated commit message and push
  up = !"f() { git add --all; ai_commit && git push --set-upstream; }; f"

### Colors #####################################################################

[color]
  ui = auto

[color "branch"]
  current = green reverse
  local = green
  remote = magenta

[color "diff"]
  frag = yellow
  meta = yellow bold
  new = green bold
  old = red bold

[color "diff-highlight"]
  newNormal = green bold
  newHighlight = green bold 22
  oldNormal = red bold
  oldHighlight = red bold 52

[color "status"]
  added = green
  changed = red bold
  untracked = magenta bold

### General ####################################################################

[advice]
	statusHints = false

[code]
  ignorecase = false

[core]
  autocrlf = input
  precomposeunicode = false
  quotepath = off
  trustctime = false
  whitespace = space-before-tab,-indent-with-non-tab,trailing-space
  excludesfile = ~/.gitignore

[interactive]
  diffFilter = delta --color-only --features=configent

[rerere]
  enabled = true

### git-delta ##################################################################

[delta]
  navigate = true   # use n and N to move between diff sections
  features = configent
  hyperlinks = true
  hyperlinks-file-link-format = "vscode://file/{path}:{line}"

[delta "configent"]
  dark = true
  line-numbers = true
  side-by-side = false
  keep-plus-minus-markers = false
  syntax-theme = SynthWave84
  file-style = "#434C5E" bold
  file-decoration-style = "#434C5E" ul
  file-added-label = [+]
  file-copied-label = [==]
  file-modified-label = [*]
  file-removed-label = [-]
  file-renamed-label = [->]
  hunk-header-style = omit
  line-numbers-left-format = " {nm:>3} │"
  line-numbers-left-style = red
  line-numbers-right-format = " {np:>3} │"
  line-numbers-right-style = green
  line-numbers-minus-style = red italic black
  line-numbers-plus-style = green italic black
  line-numbers-zero-style = "#434C5E" italic
  minus-style = bold red
  minus-emph-style = bold "#202020" "#FF5555"
  minus-non-emph-style = bold
  plus-style = bold green
  plus-emph-style = bold "#202020" "#50FA7B"
  plus-non-emph-style = bold
  zero-style = syntax
  blame-code-style = syntax
  blame-format = "{author:<18} ({commit:>9}) {timestamp:^16}"
  blame-palette = "#2E3440" "#3B4252" "#434C5E" "#4C566A"
  merge-conflict-begin-symbol = ~
  merge-conflict-end-symbol = ~
  merge-conflict-ours-diff-header-style = "#F1FA8C" bold
  merge-conflict-ours-diff-header-decoration-style = "#434C5E" box
  merge-conflict-theirs-diff-header-style = "#F1FA8C" bold
  merge-conflict-theirs-diff-header-decoration-style = "#434C5E" box

### Command specific ###########################################################

[apply]
  whitespace = warn

[diff]
  renames = copies
  colorMoved = default

[diff "bin"]
  textconv = hexdump -v -C

[fetch]
  prune = true

[help]
  autocorrect = 1

[init]
  defaultBranch = main

[merge]
  ff = false
  log = true
  conflictstyle = diff3

[pull]
  rebase = true

[push]
  default = current

[rebase]
  autoStash = true
  autosquash = true
  updateRefs = true

### URL shortcuts ##############################################################

[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
  insteadOf = "github:"

[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
  insteadOf = "gist:"

### git-lfs ####################################################################

[filter "lfs"]
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
  clean = git-lfs clean -- %f
